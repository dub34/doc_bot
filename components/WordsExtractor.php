<?php

namespace app\components;
/**
 * Created by PhpStorm.
 * User: victor
 * Date: 06.07.16
 * Time: 22:21
 */
class WordsExtractor extends \yii\base\Object
{
    public $stopwords;

    public function init()
    {
        $this->prepareStopWords();
        parent::init(); // TODO: Change the autogenerated stub
    }


    public function extract($string)
    {
        mb_internal_encoding('UTF-8');
        $stopwords = $this->stopwords;
        $string = preg_replace('/[\pP]/u', '', trim(preg_replace('/\s\s+/iu', '', mb_strtolower($string))));
        $matchWords = array_filter(explode(' ', $string), function ($item) use ($stopwords) {
            return !($item == '' || in_array($item, $stopwords) || mb_strlen($item) <= 2 || is_numeric($item));
        });
        $wordCountArr = array_count_values($matchWords);
        arsort($wordCountArr);
        return array_keys(array_slice($wordCountArr, 0, 10));
    }

    public function prepareStopWords()
    {
        if (!empty($this->stopwords)) {
            $this->stopwords = explode(PHP_EOL, $this->stopwords);
        } else {
            $this->stopwords = [];
        }
    }
}